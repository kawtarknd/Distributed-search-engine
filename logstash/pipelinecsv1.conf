input {
  file {
    path => "C:/Users/lenovo/Desktop/M1/M1 S2/systRetD/Projet/moteur-recherche-distribue/logstash/data/ChatterbotsDB.csv"
    start_position => "beginning"
    sincedb_path => "NUL"
    codec => plain { charset => "UTF-8" }
  }
}

filter {
  csv {
    separator => ","
    skip_header => "true"
    columns => [
      "Name",
      "Image",
      "Description",
      "Language",
      "Homepage",
      "Profile",
      "Year Submitted",
      "Year Launched",
      "Tags"
    ]
  }

  # Ignore ligne si pas de nom
  if ![Name] or [Name] == "" {
    drop { }
  }

  # Construire tags Ã  partir du champ Tags, ajouter "chatbots" si absent
  ruby {
    code => "
      if event.get('Tags')
        tags = event.get('Tags').split(',').map(&:strip).reject(&:empty?)
        tags << 'chatbots' unless tags.include?('chatbots')
        event.set('tags', tags)
      else
        event.set('tags', ['chatbots'])
      end
    "
  }

  mutate {
    rename => {
      "Name"           => "title"
      "Homepage"       => "url"
      "Description"    => "message"
      "Year Submitted" => "date"
    }
    convert => {
      "date" => "integer"
    }
  }

  # Ajout d'un champ conf statique (optionnel)
  ruby {
    code => "
      conf = {
        'source' => 'ChatterbotCollection',
        'category' => 'AI Chatbots',
        'custom_note' => 'Imported with chatbot tag'
      }
      event.set('conf', conf)
    "
  }
}

output {
  elasticsearch {
    hosts => ["https://localhost:9200"]
    user => "elastic"
    password => "jRjtogt4WjkyRM-=jAvw"
    ssl_enabled => true
    ssl_certificate_authorities => ["C:/ELK/elasticsearch-9.0.0/config/certs/http_ca.crt"]
    index => "chatbots_collection"
    # document_id => "%{title}"
  }

  stdout {
    codec => rubydebug
  }
}
